import type { NextPage } from "next";
import Head from "next/head";
import { useRouter } from 'next/router';
import { useForm } from "react-hook-form";
import { trpc } from "../../utils/trpc";
import Box from '@mui/material/Box';
import Divider from '@mui/material/Divider';
import Button from '@mui/material/Button';


const Settings: NextPage = () => {

  const router = useRouter();
  const utils = trpc.useContext();

  const code = router.query.code as string | undefined;

  const { data: OAdata, error: OAerror } = trpc.useQuery(["settings.get-oauth-url"]);

  const { data: Edata, error: Eerror } = trpc.useQuery(["settings.get-gmail-email"]);

  const { data: Cdata, error: Cerror } = trpc.useQuery(["settings.is-gmail-connected"]);

  return (
    <>
      <Head>
        <title>Ustawienia</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="container mx-auto flex flex-col items-center justify-center h-screen p-4">
        <div className="text-xl">Możesz tutaj podpiąć dowolny adres Gmail, z którego będą wysyłane maile</div>
        <Box className="italic" sx={{ color: 'text.secondary' }}>{"(może to być adres inny od tego w górnym lewym rogu strony)"}</Box>

        <Divider className="w-80" style={{margin: "1rem"}} />

        <p className="mb-2">{Cdata?.valueOf() ? `Połączono z ${Edata!.email}!` : "Nie połączono z Gmail"}</p>
        {OAerror && OAerror.message}
        {
          OAdata?.url && 
          <a href={OAdata.url}>
            <Button variant="outlined">
              {`Skonfiguruj${Cdata ? " ponownie" : ""} Gmaila`}
            </Button>
          </a>
        }
      </main>
    </>
  );
};

export default Settings;
