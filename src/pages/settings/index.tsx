import type { NextPage } from "next";
import Head from "next/head";
import { useRouter } from 'next/router';
import { useForm } from "react-hook-form";
import { trpc } from "../../utils/trpc";


const Settings: NextPage = () => {

  const router = useRouter();
  const utils = trpc.useContext();

  const code = router.query.code as string | undefined;

  const { data: OAdata, error: OAerror } = trpc.useQuery(["settings.get-oauth-url"]);

  const { data: Edata, error: Eerror } = trpc.useQuery(["settings.get-gmail-email"]);

  const { data: Cdata, error: Cerror } = trpc.useQuery(["settings.is-gmail-connected"]);

  const { handleSubmit, register, control } = useForm<{ email: string }>();

  return (
    <>
      <Head>
        <title>Ustawienia</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="container mx-auto flex flex-col gap-4 items-center justify-center h-screen p-4">
        <p>{Cdata?.valueOf() ? `Połączono z ${Edata.email}!` : "Nie połączono z Gmail"}</p>
        {OAerror && OAerror.message}
        {OAdata?.url && <a href={OAdata.url} className="border">{`Skonfiguruj${Cdata ? " ponownie" : ""} Gmaila${Cdata ? " (Jeśli występują problemy)" : ""}`}</a>}
      </main>
    </>
  );
};

export default Settings;
